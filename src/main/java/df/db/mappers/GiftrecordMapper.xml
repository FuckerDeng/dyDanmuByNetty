<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="df.db.mappers.GiftrecordMapper">
  <resultMap id="BaseResultMap" type="df.bean.giftbean.Giftrecord">
    <result column="rid" jdbcType="INTEGER" property="rid" />
    <result column="gfid" jdbcType="INTEGER" property="gfid" />
    <result column="isfree" jdbcType="INTEGER" property="isfree" />
    <result column="gfname" jdbcType="VARCHAR" property="gfname" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="nn" jdbcType="VARCHAR" property="nn" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="gfcnt" jdbcType="INTEGER" property="gfcnt" />
    <result column="jiage" jdbcType="DOUBLE" property="jiage" />
    <result column="gifttime" jdbcType="BIGINT" property="gifttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rid, gfid, isfree, gfname, uid, nn, level, gfcnt, jiage, gifttime
  </sql>
  <select id="selectByExample" parameterType="df.bean.giftbean.GiftrecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from giftrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="df.bean.giftbean.GiftrecordExample">
    delete from giftrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="df.bean.giftbean.Giftrecord">
    insert into giftrecord (rid, gfid, isfree, 
      gfname, uid, nn, level, 
      gfcnt, jiage, gifttime
      )
    values (#{rid,jdbcType=INTEGER}, #{gfid,jdbcType=INTEGER}, #{isfree,jdbcType=INTEGER}, 
      #{gfname,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, #{nn,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{gfcnt,jdbcType=INTEGER}, #{jiage,jdbcType=DOUBLE}, #{gifttime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="df.bean.giftbean.Giftrecord">
    insert into giftrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        rid,
      </if>
      <if test="gfid != null">
        gfid,
      </if>
      <if test="isfree != null">
        isfree,
      </if>
      <if test="gfname != null">
        gfname,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="nn != null">
        nn,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="gfcnt != null">
        gfcnt,
      </if>
      <if test="jiage != null">
        jiage,
      </if>
      <if test="gifttime != null">
        gifttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="gfid != null">
        #{gfid,jdbcType=INTEGER},
      </if>
      <if test="isfree != null">
        #{isfree,jdbcType=INTEGER},
      </if>
      <if test="gfname != null">
        #{gfname,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="nn != null">
        #{nn,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="gfcnt != null">
        #{gfcnt,jdbcType=INTEGER},
      </if>
      <if test="jiage != null">
        #{jiage,jdbcType=DOUBLE},
      </if>
      <if test="gifttime != null">
        #{gifttime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="df.bean.giftbean.GiftrecordExample" resultType="java.lang.Long">
    select count(*) from giftrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update giftrecord
    <set>
      <if test="record.rid != null">
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.gfid != null">
        gfid = #{record.gfid,jdbcType=INTEGER},
      </if>
      <if test="record.isfree != null">
        isfree = #{record.isfree,jdbcType=INTEGER},
      </if>
      <if test="record.gfname != null">
        gfname = #{record.gfname,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.nn != null">
        nn = #{record.nn,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.gfcnt != null">
        gfcnt = #{record.gfcnt,jdbcType=INTEGER},
      </if>
      <if test="record.jiage != null">
        jiage = #{record.jiage,jdbcType=DOUBLE},
      </if>
      <if test="record.gifttime != null">
        gifttime = #{record.gifttime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update giftrecord
    set rid = #{record.rid,jdbcType=INTEGER},
      gfid = #{record.gfid,jdbcType=INTEGER},
      isfree = #{record.isfree,jdbcType=INTEGER},
      gfname = #{record.gfname,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      nn = #{record.nn,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      gfcnt = #{record.gfcnt,jdbcType=INTEGER},
      jiage = #{record.jiage,jdbcType=DOUBLE},
      gifttime = #{record.gifttime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>